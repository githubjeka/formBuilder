{"version":3,"sources":["form-builder.min.js","util.js","fields.js","field.js","controls.js","form-builder.js","jquery-form-builder.js"],"names":["FBUtil","opts","util","doCancel","$form","$","document","getElementById","formID","makeID","name","time","Date","getTime","uniqueArray","arrArg","filter","elem","pos","arr","indexOf","startDrag","event","ui","item","addClass","startIndex","this","index","stopDrag","removeClass","sender","sortable","safename","str","replace","toLowerCase","forceNumber","initTooltip","tt","tooltip","find","mouseenter","outerWidth","css","width","stop","fadeIn","mouseleave","fadeOut","hide","save","children","not","dataType","val","toXML","updatePreview","field","preview","html","nameAttr","type","epoch","htmlEncode","value","text","htmlDecode","validateForm","errors","each","parents","fieldAttr","push","error","labels","labelEmpty","attribute","length","alert","animate","scrollTop","offset","top","targetID","attr","parent","next","slideUp","slideDown","disabledTT","title","removeAttr","data","class","append","outerHeight","left","remove","String","prototype","toCamelCase","matches","toUpperCase","markup","attrs","arguments","undefined","content","attrString","Array","isArray","join","inlineElems","template","attributes","hasOwnProperty","removeField","$field","Fields","createElement","Field","setAttribute","Controls","controls","className","fields","map","inputControl","prefix","label","createTextNode","meta","appendChild","FormBuilder","element","options","formBuilder","defaults","disableFields","roles","saveUrl","showWarning","serializePrefix","add","allowSelect","autocomplete","cannotBeEmpty","checkboxGroup","checkbox","checkboxes","clearAllMessage","clearAll","close","copy","date","description","descriptionField","devMode","editNames","editXML","fieldRemoveWarning","getStarted","id","limitRole","mandatory","maxLength","minOptionMessage","no","off","on","optional","optionLabelPlaceholder","optionValuePlaceholder","optionEmpty","paragraph","radioGroup","radio","removeMessage","required","selectOptions","select","selectionsMessage","textarea","warning","viewXML","yes","Object","assign","_util","init","wrapper","stage","parentElement","replaceChild","fn","form","jQuery"],"mappings":"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","file":"form-builder.min.js","sourcesContent":["'use strict';\n\nfunction FBUtil(opts) {\n  var util = {\n    doCancel: false\n  },\n      $form = $(document.getElementById(opts.formID));\n\n  util.makeID = function (name) {\n    var time = new Date().getTime();\n    return name + '-' + time;\n  };\n\n  /**\n   * Remove duplicates from an array of elements\n   * @param  {array} arrArg array with possible duplicates\n   * @return {array}        array with only unique values\n   */\n  util.uniqueArray = function (arrArg) {\n    return arrArg.filter(function (elem, pos, arr) {\n      return arr.indexOf(elem) === pos;\n    });\n  };\n\n  /**\n   * Callback for when a drag begins\n   * @param  {object} event\n   * @param  {object} ui\n   */\n  util.startDrag = function (event, ui) {\n    event = event;\n    ui.item.addClass('moving');\n    util.startIndex = $('li', this).index(ui.item);\n  };\n\n  /**\n   * Callback for when a drag ends\n   * @param  {object} event\n   * @param  {object} ui\n   */\n  util.stopDrag = function (event, ui) {\n    event = event;\n    ui.item.removeClass('moving');\n    if (util.doCancel) {\n      $(ui.sender).sortable('cancel');\n      $(this).sortable('cancel');\n    }\n  };\n\n  /**\n   * Make strings safe to be used as classes\n   * @param  {string} str string to be converted\n   * @return {string}     converter string\n   */\n  util.safename = function (str) {\n    return str.replace(/\\s/g, '-').replace(/[^a-zA-Z0-9\\-]/g, '').toLowerCase();\n  };\n\n  /**\n   * Strips non-numbers from a number only input\n   * @param  {string} str string with possible number\n   * @return {string}     string without numbers\n   */\n  util.forceNumber = function (str) {\n    return str.replace(/[^0-9]/g, '');\n  };\n\n  /**\n   * [initTooltip description]\n   * @param  {[type]} tt [description]\n   * @return {[type]}    [description]\n   */\n  util.initTooltip = function (tt) {\n    var tooltip = tt.find('.tooltip');\n    tt.mouseenter(function () {\n      if (tooltip.outerWidth() > 200) {\n        tooltip.addClass('max-width');\n      }\n      tooltip.css('left', tt.width() + 14);\n      tooltip.stop(true, true).fadeIn('fast');\n    }).mouseleave(function () {\n      tt.find('.tooltip').stop(true, true).fadeOut('fast');\n    });\n    tooltip.hide();\n  };\n\n  // saves the field data to our canvas (elem)\n  util.save = function () {\n\n    var $fieldData = $form.children('li.form-field').not('.disabled');\n\n    // console.log(formData);\n\n    if ('xml' === opts.dataType) {\n      elem.val($form.toXML());\n    } else {\n      // var fieldJSON =\n    }\n  };\n\n  // updatePreview will generate the preview for radio and checkbox groups\n  util.updatePreview = function (field) {\n    var preview;\n\n    // $('.sortable-options li', field).each(function() {\n    //   var option = $('.select-option', $(this))[0].outerHTML;\n    //   var label = $('.option-label', $(this)).val();\n    //   preview += option + ' ' + label + '<br/>';\n    // });\n\n    $('.prev-holder', field).html(preview);\n  };\n\n  /**\n   * Generate unique name with epoch timestamp\n   * @param  {string} type eg. 'text'\n   * @return {string}      'text-1443885404543'\n   */\n  util.nameAttr = function (type) {\n    var epoch = new Date().getTime();\n    return type + '-' + epoch;\n  };\n\n  util.htmlEncode = function (value) {\n    return $('<div/>').text(value).html();\n  };\n\n  util.htmlDecode = function (value) {\n    return $('<div/>').html(value).text();\n  };\n\n  /**\n   * Some basic validation before submitting our form to the backend\n   * @return {void}\n   */\n  util.validateForm = function () {\n    var errors = [];\n    // check for empty field labels\n    $('input[name=\"label\"], input[type=\"text\"].option', $form).each(function () {\n      if ($(this).val() === '') {\n        var field = $(this).parents('li.form-field'),\n            fieldAttr = $(this);\n\n        errors.push({\n          field: field,\n          error: opts.labels.labelEmpty,\n          attribute: fieldAttr\n        });\n      }\n    });\n\n    // @todo add error = { noVal: opts.labels.labelEmpty }\n    if (errors.length) {\n      alert('Error: ' + errors[0].error);\n      $('html, body').animate({\n        scrollTop: errors[0].field.offset().top\n      }, 1000, function () {\n        var targetID = $('.toggle-form', errors[0].field).attr('id');\n        $('.toggle-form', errors[0].field).addClass('open').parent().next('.prev-holder').slideUp(250);\n        $(document.getElementById(targetID + '-fld')).slideDown(250, function () {\n          errors[0].attribute.addClass('error');\n        });\n      });\n    }\n  };\n\n  /**\n   * Display a custom tooltip for disabled fields.\n   * @param  {object} field [description]\n   * @return {void}\n   */\n  util.disabledTT = function (field) {\n    var title = field.attr('data-tooltip');\n    if (title) {\n      field.removeAttr('title').data('tip_text', title);\n      var tt = $('<p/>', {\n        'class': 'frmb-tt'\n      }).html(title);\n      field.append(tt);\n      tt.css({\n        top: -tt.outerHeight(),\n        left: -15\n      });\n      field.mouseleave(function () {\n        $(this).attr('data-tooltip', field.data('tip_text'));\n        $('.frmb-tt').remove();\n      });\n    }\n  };\n\n  /**\n   * Convert hyphenated strings to camelCase\n   * @return {string}\n   */\n  String.prototype.toCamelCase = function () {\n    return this.replace(/(\\-\\w)/g, function (matches) {\n      return matches[1].toUpperCase();\n    });\n  };\n\n  /**\n   * Generate markup wrapper where needed\n   * @param  {string} type\n   * @param  {object} attrs\n   * @param  {string} content we wrap this\n   * @return {string}\n   */\n  util.markup = function (type) {\n    var attrs = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    var content = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];\n\n    attrs = util.attrString(attrs);\n    content = Array.isArray(content) ? content.join('') : content;\n    var inlineElems = ['input'],\n        template = inlineElems.indexOf(type) === -1 ? '<' + type + ' ' + attrs + '>' + content + '</' + type + '>' : '<' + type + ' ' + attrs + '/>';\n    return template;\n  };\n\n  /**\n   * Takes and object of attributes and converts them to string\n   * @param  {object} attrs\n   * @return {string}\n   */\n  util.attrString = function (attrs) {\n    var attributes = [];\n    for (var attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        attributes.push(attr + '=\"' + attrs[attr] + '\"');\n      }\n    }\n    return attributes.join(' ');\n  };\n\n  /**\n   * Remove a field from the form\n   * @param  {object} $field [description]\n   */\n  util.removeField = function ($field) {\n    $field.slideUp(250, function () {\n      $(this).remove();\n      util.save();\n    });\n  };\n\n  return util;\n};\n'use strict';\n\nfunction Fields(type) {\n  'use strict';\n\n  var attrs = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var field = document.createElement(type);\n\n  for (var attr in attrs) {\n    if (attrs.hasOwnProperty(attr)) {\n      field[attr] = attr;\n    }\n  }\n\n  return field;\n}\n'use strict';\n\nfunction Field(type) {\n  'use strict';\n\n  var attrs = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var meta = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n  var field = document.createElement(type);\n\n  for (var attr in attrs) {\n    if (attrs.hasOwnProperty(attr)) {\n      field.setAttribute(attr, attrs[attr]);\n    }\n  }\n\n  return field;\n}\n'use strict';\n\nfunction Controls(opts) {\n  'use strict';\n\n  var controls = document.createElement('div');\n  controls.className = 'fb-control-wrapper col-md-4';\n\n  opts.fields.map(function (elem, index) {\n\n    var inputControl = new Field('button', {\n      'class': '' + opts.prefix + elem.attrs.type + '-control fb-control',\n      type: 'button'\n    }),\n        label = document.createTextNode(elem.meta.label);\n    inputControl.appendChild(label);\n    controls.appendChild(inputControl);\n\n    return inputControl;\n  });\n\n  return controls;\n}\n'use strict';\n\nvar FormBuilder = function FormBuilder(element, options) {\n  'use strict';\n\n  var formBuilder = this;\n\n  var defaults = {\n    prefix: 'fb-',\n    dataType: 'json', // xml or json\n    // Uneditable fields or other content you would like to\n    // appear before and after regular fields.\n    disableFields: {\n      // before: '<h2>Header</h2>',\n      // after: '<h3>Footer</h3>'\n    },\n    // array of objects with fields values\n    // ex:\n    // defaultFields: [{\n    //   label: 'First Name',\n    //   name: 'first-name',\n    //   required: 'true',\n    //   description: 'Your first name',\n    //   type: 'text'\n    // }, {\n    //   label: 'Phone',\n    //   name: 'phone',\n    //   description: 'How can we reach you?',\n    //   type: 'text'\n    // }],\n    // defaultFields: [],\n    roles: [{\n      value: 1,\n      label: 'Administrator'\n    }],\n    saveUrl: false,\n    showWarning: false,\n    serializePrefix: 'frmb',\n    labels: {\n      add: 'Add Item',\n      allowSelect: 'Allow Select',\n      autocomplete: 'Autocomplete',\n      cannotBeEmpty: 'This field cannot be empty',\n      checkboxGroup: 'Checkbox Group',\n      checkbox: 'Checkbox',\n      checkboxes: 'Checkboxes',\n      'class': 'Class',\n      clearAllMessage: 'Are you sure you want to remove all items?',\n      clearAll: 'Clear All',\n      close: 'Close',\n      copy: 'Copy To Clipboard',\n      date: 'Date Field',\n      description: 'Help Text',\n      descriptionField: 'Description',\n      devMode: 'Developer Mode',\n      disableFields: 'These fields cannot be moved.',\n      editNames: 'Edit Names',\n      editXML: 'Edit XML',\n      fieldRemoveWarning: 'Are you sure you want to remove this field?',\n      getStarted: 'Drag a field from the right to this area',\n      hide: 'Edit',\n      id: 'ID',\n      label: 'Label',\n      labelEmpty: 'Field Label cannot be empty',\n      limitRole: 'Limit access to one or more of the following roles:',\n      mandatory: 'Mandatory',\n      maxLength: 'Max Length',\n      minOptionMessage: 'This field requires a minimum of 2 options',\n      name: 'Name',\n      no: 'No',\n      off: 'Off',\n      on: 'On',\n      optional: 'optional',\n      options: 'Options',\n      optionLabelPlaceholder: 'Label',\n      optionValuePlaceholder: 'Value',\n      optionEmpty: 'Option value required',\n      paragraph: 'Paragraph',\n      preview: 'Preview',\n      radioGroup: 'Radio Group',\n      radio: 'Radio',\n      removeMessage: 'Remove Element',\n      remove: '&#215;',\n      required: 'Required',\n      roles: 'Limit Access',\n      save: 'Save Template',\n      selectOptions: 'Select Items',\n      select: 'Select',\n      selectionsMessage: 'Allow Multiple Selections',\n      text: 'Text Field',\n      textarea: 'Text Area',\n      warning: 'Warning!',\n      viewXML: 'View XML',\n      yes: 'Yes'\n    }\n  };\n\n  var opts = Object.assign(defaults, options);\n\n  var _util = new FBUtil(opts);\n\n  formBuilder.id = _util.makeID('form-builder');\n\n  opts.fields = (function () {\n    var fields = ['text', 'textarea', 'select'];\n\n    return fields.map(function (elem, index) {\n\n      var field = {\n        meta: {\n          label: opts.labels[elem]\n        },\n        attrs: {\n          type: elem\n        }\n      };\n      return field;\n    });\n  })();\n\n  formBuilder.init = (function (element) {\n    var wrapper = document.createElement('div');\n    wrapper.setAttribute('id', formBuilder.id);\n    wrapper.setAttribute('class', 'form-builder');\n\n    formBuilder.controls = new Controls(opts);\n    formBuilder.stage = document.createElement('div');\n    formBuilder.stage.setAttribute('class', 'fb-stage');\n    formBuilder.stage.setAttribute('id', _util.makeID(formBuilder.stage.className));\n    formBuilder.stage.setAttribute('class', formBuilder.stage.className + ' col-md-8');\n\n    wrapper.appendChild(formBuilder.controls);\n    wrapper.appendChild(formBuilder.stage);\n    element.parentElement.replaceChild(wrapper, element);\n  })(element);\n};\n'use strict';\n\n(function ($) {\n  'use strict';\n\n  $.fn.formBuilder = function (options) {\n    var form = this;\n    return form.each(function () {\n      var element = this,\n          formBuilder = new FormBuilder(element, options);\n      if ($(formBuilder).data('formBuilder')) {\n        return;\n      }\n      $(formBuilder).data('formBuilder', formBuilder);\n    });\n  };\n})(jQuery);","function FBUtil(opts) {\n  var util = {\n      doCancel: false\n    },\n    $form = $(document.getElementById(opts.formID));\n\n\n  util.makeID = function(name) {\n    let time = new Date().getTime();\n    return `${name}-${time}`;\n  };\n\n  /**\n   * Remove duplicates from an array of elements\n   * @param  {array} arrArg array with possible duplicates\n   * @return {array}        array with only unique values\n   */\n  util.uniqueArray = (arrArg) => {\n    return arrArg.filter((elem, pos, arr) => {\n      return arr.indexOf(elem) === pos;\n    });\n  };\n\n  /**\n   * Callback for when a drag begins\n   * @param  {object} event\n   * @param  {object} ui\n   */\n  util.startDrag = function(event, ui) {\n    event = event;\n    ui.item.addClass('moving');\n    util.startIndex = $('li', this).index(ui.item);\n  };\n\n  /**\n   * Callback for when a drag ends\n   * @param  {object} event\n   * @param  {object} ui\n   */\n  util.stopDrag = function(event, ui) {\n    event = event;\n    ui.item.removeClass('moving');\n    if (util.doCancel) {\n      $(ui.sender).sortable('cancel');\n      $(this).sortable('cancel');\n    }\n  };\n\n  /**\n   * Make strings safe to be used as classes\n   * @param  {string} str string to be converted\n   * @return {string}     converter string\n   */\n  util.safename = function(str) {\n    return str.replace(/\\s/g, '-').replace(/[^a-zA-Z0-9\\-]/g, '').toLowerCase();\n  };\n\n\n  /**\n   * Strips non-numbers from a number only input\n   * @param  {string} str string with possible number\n   * @return {string}     string without numbers\n   */\n  util.forceNumber = function(str) {\n    return str.replace(/[^0-9]/g, '');\n  };\n\n  /**\n   * [initTooltip description]\n   * @param  {[type]} tt [description]\n   * @return {[type]}    [description]\n   */\n  util.initTooltip = function(tt) {\n    var tooltip = tt.find('.tooltip');\n    tt.mouseenter(function() {\n      if (tooltip.outerWidth() > 200) {\n        tooltip.addClass('max-width');\n      }\n      tooltip.css('left', tt.width() + 14);\n      tooltip.stop(true, true).fadeIn('fast');\n    }).mouseleave(function() {\n      tt.find('.tooltip').stop(true, true).fadeOut('fast');\n    });\n    tooltip.hide();\n  };\n\n  // saves the field data to our canvas (elem)\n  util.save = function() {\n\n    let $fieldData = $form.children('li.form-field').not('.disabled');\n\n    // console.log(formData);\n\n    if ('xml' === opts.dataType) {\n      elem.val($form.toXML());\n    } else {\n      // var fieldJSON =\n    }\n  };\n\n  // updatePreview will generate the preview for radio and checkbox groups\n  util.updatePreview = function(field) {\n    var preview;\n\n    // $('.sortable-options li', field).each(function() {\n    //   var option = $('.select-option', $(this))[0].outerHTML;\n    //   var label = $('.option-label', $(this)).val();\n    //   preview += option + ' ' + label + '<br/>';\n    // });\n\n    $('.prev-holder', field).html(preview);\n  };\n\n\n  /**\n   * Generate unique name with epoch timestamp\n   * @param  {string} type eg. 'text'\n   * @return {string}      'text-1443885404543'\n   */\n  util.nameAttr = function(type) {\n    var epoch = new Date().getTime();\n    return type + '-' + epoch;\n  };\n\n  util.htmlEncode = function(value) {\n    return $('<div/>').text(value).html();\n  };\n\n  util.htmlDecode = function(value) {\n    return $('<div/>').html(value).text();\n  };\n\n  /**\n   * Some basic validation before submitting our form to the backend\n   * @return {void}\n   */\n  util.validateForm = function() {\n    var errors = [];\n    // check for empty field labels\n    $('input[name=\"label\"], input[type=\"text\"].option', $form).each(function() {\n      if ($(this).val() === '') {\n        var field = $(this).parents('li.form-field'),\n          fieldAttr = $(this);\n\n        errors.push({\n          field: field,\n          error: opts.labels.labelEmpty,\n          attribute: fieldAttr\n        });\n      }\n    });\n\n    // @todo add error = { noVal: opts.labels.labelEmpty }\n    if (errors.length) {\n      alert('Error: ' + errors[0].error);\n      $('html, body').animate({\n        scrollTop: errors[0].field.offset().top\n      }, 1000, function() {\n        var targetID = $('.toggle-form', errors[0].field).attr('id');\n        $('.toggle-form', errors[0].field).addClass('open').parent().next('.prev-holder').slideUp(250);\n        $(document.getElementById(targetID + '-fld')).slideDown(250, function() {\n          errors[0].attribute.addClass('error');\n        });\n      });\n    }\n  };\n\n  /**\n   * Display a custom tooltip for disabled fields.\n   * @param  {object} field [description]\n   * @return {void}\n   */\n  util.disabledTT = function(field) {\n    var title = field.attr('data-tooltip');\n    if (title) {\n      field.removeAttr('title').data('tip_text', title);\n      var tt = $('<p/>', {\n        'class': 'frmb-tt'\n      }).html(title);\n      field.append(tt);\n      tt.css({\n        top: -tt.outerHeight(),\n        left: -15\n      });\n      field.mouseleave(function() {\n        $(this).attr('data-tooltip', field.data('tip_text'));\n        $('.frmb-tt').remove();\n      });\n    }\n  };\n\n  /**\n   * Convert hyphenated strings to camelCase\n   * @return {string}\n   */\n  String.prototype.toCamelCase = function() {\n    return this.replace(/(\\-\\w)/g, function(matches) {\n      return matches[1].toUpperCase();\n    });\n  };\n\n  /**\n   * Generate markup wrapper where needed\n   * @param  {string} type\n   * @param  {object} attrs\n   * @param  {string} content we wrap this\n   * @return {string}\n   */\n  util.markup = function(type, attrs = {}, content = '') {\n    attrs = util.attrString(attrs);\n    content = Array.isArray(content) ? content.join('') : content;\n    let inlineElems = ['input'],\n      template = inlineElems.indexOf(type) === -1 ? `<${type} ${attrs}>${content}</${type}>` : `<${type} ${attrs}/>`;\n    return template;\n  };\n\n\n  /**\n   * Takes and object of attributes and converts them to string\n   * @param  {object} attrs\n   * @return {string}\n   */\n  util.attrString = function(attrs) {\n    var attributes = [];\n    for (var attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        attributes.push(attr + '=\"' + attrs[attr] + '\"');\n      }\n    }\n    return attributes.join(' ');\n  };\n\n\n  /**\n   * Remove a field from the form\n   * @param  {object} $field [description]\n   */\n  util.removeField = function($field) {\n    $field.slideUp(250, function() {\n      $(this).remove();\n      util.save();\n    });\n  };\n\n  return util;\n};\n","function Fields(type, attrs = {}){\n  'use strict';\n\n  var field = document.createElement(type);\n\n  for (var attr in attrs) {\n    if (attrs.hasOwnProperty(attr)) {\n      field[attr] = attr;\n    }\n  }\n\nreturn field;\n}\n","function Field(type, attrs = {}, meta = {}) {\n  'use strict';\n\n  var field = document.createElement(type);\n\n  for (var attr in attrs) {\n    if (attrs.hasOwnProperty(attr)) {\n      field.setAttribute(attr, attrs[attr]);\n    }\n  }\n\n  return field;\n}\n","function Controls(opts) {\n  'use strict';\n\n  var controls = document.createElement('div');\n  controls.className = 'fb-control-wrapper col-md-4';\n\n  opts.fields.map(function(elem, index) {\n\n    let inputControl = new Field('button', {\n      class: `${opts.prefix}${elem.attrs.type}-control fb-control`,\n      type: 'button'\n    }),\n    label = document.createTextNode(elem.meta.label);\n    inputControl.appendChild(label);\n    controls.appendChild(inputControl);\n\n    return inputControl;\n  });\n\n\n  return controls;\n}\n","var FormBuilder = function(element, options) {\r\n  'use strict';\r\n\r\n  var formBuilder = this;\r\n\r\n  var defaults = {\r\n    prefix: 'fb-',\r\n    dataType: 'json', // xml or json\r\n    // Uneditable fields or other content you would like to\r\n    // appear before and after regular fields.\r\n    disableFields: {\r\n      // before: '<h2>Header</h2>',\r\n      // after: '<h3>Footer</h3>'\r\n    },\r\n    // array of objects with fields values\r\n    // ex:\r\n    // defaultFields: [{\r\n    //   label: 'First Name',\r\n    //   name: 'first-name',\r\n    //   required: 'true',\r\n    //   description: 'Your first name',\r\n    //   type: 'text'\r\n    // }, {\r\n    //   label: 'Phone',\r\n    //   name: 'phone',\r\n    //   description: 'How can we reach you?',\r\n    //   type: 'text'\r\n    // }],\r\n    // defaultFields: [],\r\n    roles: [{\r\n      value: 1,\r\n      label: 'Administrator'\r\n    }],\r\n    saveUrl: false,\r\n    showWarning: false,\r\n    serializePrefix: 'frmb',\r\n    labels: {\r\n      add: 'Add Item',\r\n      allowSelect: 'Allow Select',\r\n      autocomplete: 'Autocomplete',\r\n      cannotBeEmpty: 'This field cannot be empty',\r\n      checkboxGroup: 'Checkbox Group',\r\n      checkbox: 'Checkbox',\r\n      checkboxes: 'Checkboxes',\r\n      'class': 'Class',\r\n      clearAllMessage: 'Are you sure you want to remove all items?',\r\n      clearAll: 'Clear All',\r\n      close: 'Close',\r\n      copy: 'Copy To Clipboard',\r\n      date: 'Date Field',\r\n      description: 'Help Text',\r\n      descriptionField: 'Description',\r\n      devMode: 'Developer Mode',\r\n      disableFields: 'These fields cannot be moved.',\r\n      editNames: 'Edit Names',\r\n      editXML: 'Edit XML',\r\n      fieldRemoveWarning: 'Are you sure you want to remove this field?',\r\n      getStarted: 'Drag a field from the right to this area',\r\n      hide: 'Edit',\r\n      id: 'ID',\r\n      label: 'Label',\r\n      labelEmpty: 'Field Label cannot be empty',\r\n      limitRole: 'Limit access to one or more of the following roles:',\r\n      mandatory: 'Mandatory',\r\n      maxLength: 'Max Length',\r\n      minOptionMessage: 'This field requires a minimum of 2 options',\r\n      name: 'Name',\r\n      no: 'No',\r\n      off: 'Off',\r\n      on: 'On',\r\n      optional: 'optional',\r\n      options: 'Options',\r\n      optionLabelPlaceholder: 'Label',\r\n      optionValuePlaceholder: 'Value',\r\n      optionEmpty: 'Option value required',\r\n      paragraph: 'Paragraph',\r\n      preview: 'Preview',\r\n      radioGroup: 'Radio Group',\r\n      radio: 'Radio',\r\n      removeMessage: 'Remove Element',\r\n      remove: '&#215;',\r\n      required: 'Required',\r\n      roles: 'Limit Access',\r\n      save: 'Save Template',\r\n      selectOptions: 'Select Items',\r\n      select: 'Select',\r\n      selectionsMessage: 'Allow Multiple Selections',\r\n      text: 'Text Field',\r\n      textarea: 'Text Area',\r\n      warning: 'Warning!',\r\n      viewXML: 'View XML',\r\n      yes: 'Yes'\r\n    }\r\n  };\r\n\r\n  var opts = Object.assign(defaults, options);\r\n\r\n  var _util = new FBUtil(opts);\r\n\r\n  formBuilder.id = _util.makeID('form-builder');\r\n\r\n\r\n  opts.fields = (function() {\r\n    let fields = [\r\n      'text',\r\n      'textarea',\r\n      'select'\r\n    ];\r\n\r\n    return fields.map(function(elem, index) {\r\n\r\n      let field = {\r\n        meta: {\r\n          label: opts.labels[elem]\r\n        },\r\n        attrs: {\r\n          type: elem\r\n        }\r\n      };\r\n      return field;\r\n    });\r\n\r\n  })();\r\n\r\n\r\n  formBuilder.init = (function(element) {\r\n    var wrapper = document.createElement('div');\r\n    wrapper.setAttribute('id', formBuilder.id);\r\n    wrapper.setAttribute('class', 'form-builder');\r\n\r\n    formBuilder.controls = new Controls(opts);\r\n    formBuilder.stage = document.createElement('div');\r\n    formBuilder.stage.setAttribute('class', 'fb-stage');\r\n    formBuilder.stage.setAttribute('id', _util.makeID(formBuilder.stage.className));\r\n    formBuilder.stage.setAttribute('class', `${formBuilder.stage.className} col-md-8`);\r\n\r\n    wrapper.appendChild(formBuilder.controls);\r\n    wrapper.appendChild(formBuilder.stage);\r\n    element.parentElement.replaceChild(wrapper, element);\r\n  })(element);\r\n\r\n\r\n};\r\n","(function($) {\n  'use strict';\n\n  $.fn.formBuilder = function(options) {\n    var form = this;\n    return form.each(function() {\n      var element = this,\n      formBuilder = new FormBuilder(element, options);\n      if ($(formBuilder).data('formBuilder')) {\n        return;\n      }\n      $(formBuilder).data('formBuilder', formBuilder);\n    });\n  };\n\n})(jQuery);\n"],"sourceRoot":"/source/"}